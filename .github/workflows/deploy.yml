name: Deploy Laravel para public_html via FTP (Otimizado e Corrigido)

on:
  push:
    branches:
    - main

jobs:
  test:
    name: Executar Testes
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Obter código mais recente
      uses: actions/checkout@v4

    - name: 🗃️ Cache Composer
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: 📦 Instalar dependências do Composer
      run: composer install --prefer-dist --no-interaction --no-scripts

    - name: 🛠️ Configurar ambiente
      run: |
        # Cria .env a partir do exemplo ou testing
        [ -f ".env.testing" ] && cp .env.testing .env || cp .env.example .env

        # Configurações específicas para CI
        echo "APP_ENV=testing" >> .env
        echo "APP_DEBUG=true" >> .env
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=:memory:" >> .env

        # Gera chave de aplicação
        php artisan key:generate

    - name: 🧪 Rodar testes
      run: ./vendor/bin/phpunit

  deploy:
    name: Deploy Laravel via FTP
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 10

    steps:
    - name: 📥 Obter código
      uses: actions/checkout@v4

    - name: 🗃️ Cache Composer
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: 📦 Instalar dependências de produção
      run: composer install --no-dev --prefer-dist --optimize-autoloader --no-interaction

    - name: 🗃️ Cache NPM
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: 📦 Instalar NPM (CI)
      run: npm ci

    - name: 🔨 Compilar assets
      run: npm run build

    - name: 📤 Upload FTP inteligente
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: ${{ secrets.HOSTGATOR_DEPLOY_DIR }}
        local-dir: ./
        exclude: |
          **/.git*
          **/*.md
          **/.editorconfig
          **/.gitattributes
          **/tests/*
          **/docs/*
          **/docker/*
          **/examples/*
          **/build/*
          **/phpunit.xml

    - name: 🚀 Configuração Remota
      run: |
        ssh -i <(echo "${{ secrets.SSH_PRIVATE_KEY }}") \
          -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USER }}@${{ secrets.SERVER }} <<EOF
        cd ${{ secrets.HOSTGATOR_DEPLOY_DIR }}

        # Ambiente
        [ -f .env ] || echo "${{ secrets.ENV_FILE }}" > .env

        # Otimizações
        php artisan config:cache
        php artisan route:cache
        php artisan view:cache

        # Permissões
        chmod -R 775 storage bootstrap/cache
        chown -R www-data:www-data storage bootstrap/cache

        # Migrações
        php artisan migrate --force --no-interaction

        echo "🚀 Deploy concluído com sucesso!"
        EOF
